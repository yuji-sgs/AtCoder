"""
高橋君は 2 次元コード TaK Code を考案しました。以下の条件を全て満たすものが TaK Code です。
・縦 9 マス 横 9 マスの領域である
・左上及び右下の縦 3 マス 横 3 マスの領域に含まれる計 18 マスは全て黒である
・左上及び右下の縦 3 マス 横 3 マスの領域に八方位で隣接する計 14 マスは全て白である

TaK Code を回転させることはできません。

縦 N マス、横 M マスのグリッドがあります。 
グリッドの状態は N 個の長さ M の文字列 S1,…,SNで与えられ、上から i 行目左から j 列目のマスは Siの j 文字目が # のとき黒、. のとき白です。
グリッドに完全に含まれる縦 9 マス横 9 マスの領域で、TaK Code の条件を満たす箇所を全て求めてください。
"""
N, M = map(int, input().split())
S = [input() for _ in range(N)]
ans = []

for i in range(N):
    for j in range(M):
        if i+8 < N and j+8 < M:
            if S[i][j] == S[i+1][j] == S[i+2][j] == S[i][j+1] == S[i+1][j+1] == S[i+2][j+1] == S[i][j+2] == S[i+1][j+2] == S[i+2][j+2] == S[i+8][j+8] == S[i+7][j+8] == S[i+6][j+8] == S[i+8][j+7] == S[i+7][j+7] == S[i+6][j+7] == S[i+8][j+6] == S[i+7][j+6] == S[i+6][j+6] == "#" and S[i+3][j] == S[i+3][j+1] == S[i+3][j+2] == S[i+3][j+3] == S[i+2][j+3] == S[i+1][j+3] == S[i][j+3] == S[i+8][j+5] == S[i+7][j+5] == S[i+6][j+5] == S[i+5][j+5] == S[i+5][j+6] == S[i+5][j+7] == S[i+5][j+8] == ".":
                ans += [[i+1, j+1]]
                
for a in ans:
    print(a[0], a[1])
